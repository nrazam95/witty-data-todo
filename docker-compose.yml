version: '3.9'

services:
  db:
    image: postgres
    restart: always
    # build: 
    #   context: ./backend/db
    #   dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=witty-data-todo
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5432:5432
    networks:
      - example-network
    volumes:
      - ./backend/db:/docker-entrypoint-initdb.d
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8080:80
    networks:
      - example-network
    volumes:
      - /app/node_modules
      - ./frontend:/app
  backend:
    container_name: backend
    hostname: backend
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - db
    environment:
      - NODE_ENV=development
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=witty-data-todo
      - DATABASE_URL=postgres://postgres:postgres@localhost:5432/witty-data-todo
      - JWT_SECRET=secret
      - FRONTEND_URL=http://localhost:8080
      - FRONTEND_HOST=localhost
      - FRONTEND_PORT=8080
      - BACKEND_URL=http://localhost:3000
      - BACKEND_HOST=localhost
      - BACKEND_PORT=3000
    networks:
      - example-network
  # nginx:
  #   container_name: nginx
  #   hostname: nginx
  #   build: 
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 3050:80
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - example-network
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #     - ./nginx/logs:/var/log/nginx
  #     - ./frontend/dist:/usr/share/nginx/html
  #     - ./backend/dist:/usr/share/nginx/html/api
networks:
  example-network:
    driver: bridge